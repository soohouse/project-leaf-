<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.leaf.admin.mapper.IAdminMapper">

	<!-- CommonListVO와 조인을 진행한 SELECT문과 매칭시켜주는 resultMap인 CommonListMap 선언 -->
	<resultMap type="com.spring.leaf.admin.command.CommonListVO" id="CommonListMap">
		<id property="commonNum" column="ROWNUM" />
		<result property="upperValue" column="upper_value" />
		<result property="commonCODE" column="common_CODE" />
		<result property="commonValue" column="common_value" />
		<result property="commonUse" column="common_use" />
		<result property="upperCODE" column="upper_CODE" />
	</resultMap>
	
	
	<!-- CompanyAcceptListVO와 데이터베이스를 매칭시켜주는 resultMap인 CompanyAcceptMap 선언  -->
	<resultMap type="com.spring.leaf.admin.command.CompanyAcceptListVO" id="CompanyAcceptListMap">
		<id property="companyNO" column="company_NO" />
		<result property="companyID" column="company_ID" />
		<result property="companyName" column="company_name" />
		<result property="companyPhone" column="company_phone" />
		<result property="companyEmail" column="company_email" />
		<result property="commonValue" column="common_value" />
	</resultMap>
	
	
	<!-- CompanyAcceptVO와 데이터베이스를 매칭시켜주는 resultMap인  CompanyAcceptMap 선언 -->
	<resultMap type="com.spring.leaf.admin.command.CompanyAcceptVO" id="CompanyAcceptMap">
		<id property="companyNO" column="company_NO" />
		<result property="companyID" column="company_ID" />
		<result property="companyName" column="company_name" />
		<result property="companyPhone" column="company_phone" />
		<result property="companyEmail" column="company_email" />
		<result property="companyIntroRealname" column="company_intro_realname" />
		<result property="commonValue" column="common_value" />
	</resultMap>
	
	
	<!-- 공통코드 목록 받아오기 SELECT 쿼리 -->
	<select id="commonList" resultMap="CommonListMap">
		SELECT 
			@ROWNUM := @ROWNUM + 1 AS ROWNUM, cl.*
		FROM (
			SELECT 
				u.upper_value, c.common_CODE, c.common_value, c.common_use, u.upper_CODE
			FROM
				common c LEFT OUTER JOIN upper_common u
			ON c.upper_CODE = u.upper_CODE
		) cl, (SELECT @ROWNUM := 0) ROWNUM
	</select>
	
	
	<!-- 공통코드 상세 보기 SELECT 쿼리 -->
	<select id="commonDetail" resultMap="CommonListMap">
		SELECT 
			@ROWNUM := @ROWNUM + 1 AS ROWNUM, cl.*
		FROM (
			SELECT 
				u.upper_value, c.common_CODE, c.common_value, c.common_use, u.upper_CODE
			FROM
				common c LEFT OUTER JOIN upper_common u
			ON c.upper_CODE = u.upper_CODE
		) cl, (SELECT @ROWNUM := 0) ROWNUM
		WHERE common_CODE = #{commonCODE}
	</select>
	
	
	<!-- 공통코드 사용 여부 Y로 수정 UPDATE 쿼리 -->
	<update id="commonModifyYes">
		UPDATE common
		SET common_use = 'Y'
		WHERE common_CODE = #{commonCODE}
	</update>
	
	
	<!-- 공통코드 사용 여부 N으로 수정 UPDATE 쿼리 -->
	<update id="commonModifyNo">
		UPDATE common
		SET common_use = 'N'
		WHERE common_CODE = #{commonCODE}
	</update>
	
	
	<!-- 공통코드 등록 INSERT 쿼리 -->
	<insert id="commonRegist">
		INSERT INTO common
			(common_CODE, common_value, upper_CODE)
		VALUES
			(#{commonCODE}, #{commonValue}, #{upperCODE})
	</insert>
	
	
	<!-- 공통코드 중복 여부 체크 SELECT 쿼리 -->
	<select id="commonCheck" resultType="int">
		SELECT COUNT(*)
		FROM common
		WHERE common_CODE = #{commonCODE}
	</select>
	
	
	<!-- 공통코드 삭제 DELETE 쿼리 -->
	<delete id="commonDelete">
		DELETE FROM common
		WHERE common_CODE = #{commonCODE}
	</delete>
	
	
	<!-- 가입 승인 대기중인 기업 목록 SELECT 쿼리 -->
	<select id="companyAcceptList" resultMap="CompanyAcceptListMap">
		SELECT
			c.company_NO, c.company_ID, c.company_name, 
			CONCAT(c.company_phone1, '-',  c.company_phone2, '-', c.company_phone3) AS company_phone, 
			CONCAT(c.company_email1, '@', c.company_email2) AS company_email,
			cd.common_value
		FROM company c LEFT OUTER JOIN common cd
		ON c.common_CODE = cd.common_CODE
		WHERE c.common_CODE = 'CRG001'
	</select>
	
	
	<!-- 가입 승인 대기중인 기업 상세보기 SELECT 쿼리 -->
	<select id="companyAcceptDetail" resultMap="CompanyAcceptMap">
		SELECT
			c.company_NO, c.company_ID, c.company_name, 
		    CONCAT(c.company_phone1, '-',  c.company_phone2, '-', c.company_phone3) AS company_phone, 
		    CONCAT(c.company_email1, '@', c.company_email2) AS company_email,
		    ci.company_intro_realname, cd.common_value
		FROM
			company c LEFT OUTER JOIN company_intro ci
		ON c.company_NO = ci.company_NO
			LEFT OUTER JOIN common cd
		ON c.common_CODE = cd.common_CODE
		WHERE c.company_NO = #{companyNO}
	</select>
	
	
	<!-- 가입 승인 UPDATE 쿼리 -->
	<update id="companyAccept">
		UPDATE company
		SET common_CODE = 'CRG002'
		WHERE company_NO = #{companyNO}
	</update>
	
</mapper>